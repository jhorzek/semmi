% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_modifications.R
\name{add_modifications}
\alias{add_modifications}
\title{add_modifications}
\usage{
add_modifications(spec_search_result, threshold_percent_added)
}
\arguments{
\item{spec_search_result}{result from bootstrap_specification_search or
resample_specification_search}

\item{threshold_percent_added}{modifications must have been added to
threshold_percent_added \% of the models to be added to the final model}
}
\value{
the lavaan syntax and fitted final model
}
\description{
Adds modifications identified by bootstrap_specification_search or
resample_specification_search to the lavaan model. Both
bootstrap_specification_search and resample_specification_search provide
modifications and the number of times these modifications have been added
to models in bootstrap samples or resamples of the original data.
add_modifications adds some or all of these modificactions to the final model.
To this end, specify threshold_percent_added - modifications that have been added
in >= threshold_percent_added \% of the models will be present in the final model.
}
\examples{
library(semmi)
set.seed(12345)

data <- simulate_PolDem(sample_size = 10000)$data

base_model <- '
  # latent variable definitions
     eta1 =~ x1 + x2 + x3
     eta2 =~ y1 + a*y2 + b*y3 + c*y4
     eta3 =~ y5 + a*y6 + b*y7 + c*y8

  # regressions
    eta2 ~ eta1
    eta3 ~ eta1 + eta2
'

train_set <- sample(1:nrow(data),
                    size = 400)

fit_base <- sem(model = base_model,
                data = data[train_set,])

specification_searched <- specification_search(model = base_model,
                                               data = data[train_set,],
                                               operators = "~~")

resample_spec_search <- resample_specification_search(model = base_model,
                                                        data = data[train_set,],
                                                        alpha = .05,
                                                        operators = "~~",
                                                        number_of_resamples = 10,
                                                        N_subsets = 80,
                                                        missing = "ml",
                                                        std.lv = FALSE)

final_model <- add_modifications(resample_spec_search,
                                 threshold_percent_added = 25)

# cross-validate
## without resampling:
cross_validate_lavaan(lavaan_model = specification_searched$lavaan_model,
                      test_set = data[-train_set,])

## with resampling:
cross_validate_lavaan(lavaan_model = final_model$lavaan_model,
                      test_set = data[-train_set,])
}
